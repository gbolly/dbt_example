
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'civis_platform'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"] 
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  civis_platform:

    pre-hook: drop table if exists last_run; select current_timestamp::timestamptz as last_run_start, null::timestamptz as last_run_finish into last_run;
    post-hook: update last_run set last_run_finish = current_timestamp;

    # Applies to all files under models/example/
    example:
      materialized: table

    # Applies to all files under models/main/
    main:
      materialized: view
      vars:
        start_date: '2020-03-03'


seeds:
  civis_platform:
    enabled: true
    
    dim_date:
      column_types:
        date: date
        
        

    ad_account_metrics:
      column_types:
        date: date
        spend: numeric(12,2)
